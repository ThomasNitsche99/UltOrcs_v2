generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String @id @default(uuid())
  //credentials
  username      String @unique
  passwordHash  String
  userAuthToken String @unique
  //basic info
  age           Int    @default(0)
  quote         String @default("")

  // list of friends
  friends         Friendship[] @relation("userFriends")
  symmetricFriend Friendship[] @relation("symmetricFriend")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role   Roles @relation(fields: [roleId], references: [id])
  roleId Int

  friendRequestsSent     FriendRequest[] @relation("friendRequestFromUser")
  friendRequestsReceived FriendRequest[] @relation("friendRequestToUser")
}

model Roles {
  id   Int    @id @default(autoincrement())
  name String @unique
  User User[]
}

model FriendRequest {
  id         String @id @default(uuid())
  fromUser   User   @relation("friendRequestFromUser", fields: [fromUserId], references: [id])
  toUser     User   @relation("friendRequestToUser", fields: [toUserId], references: [id])
  fromUserId String
  toUserId   String
}

// create Friends table that lista users friends
model Friendship {
  id        String   @id @default(uuid())
  user      User     @relation("userFriends", fields: [userId], references: [id])
  userId    String
  friend    User     @relation("symmetricFriend", fields: [friendId], references: [id])
  friendId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
